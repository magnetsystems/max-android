/*
 * Copyright (c) 2015 Magnet Systems, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * File generated by Magnet Magnet Lang Tool on Jun 16, 2015 10:53:47 AM
 * @see {@link http://developer.magnet.com}
 */
package com.magnet.max.android;

import com.magnet.max.android.auth.model.DeviceInfo;
import retrofit.MagnetCall;
import retrofit.http.*;

/**public**/ interface DeviceService {

  /**
   * 
   * POST /api/devices
   * @param body style:Body optional:false
   * @param callback asynchronous callback
   */
  @POST("/api/com.magnet.server/devices") MagnetCall<Device> registerDevice(
     @Body DeviceInfo body,
     retrofit.Callback<Device> callback
  );

  /**
   * 
   * GET /api/devices
   * @param skip style:Query optional:false
   * @param take style:Query optional:false
   * @param callback asynchronous callback
   */
  @GET("/api/com.magnet.server/devices")
  MagnetCall<java.util.List<String>> getDevices(
     @Query("skip") Integer skip,
     @Query("take") Integer take,
     retrofit.Callback<java.util.List<String>> callback
  );

  /**
   * 
   * GET /api/devices/{deviceId}
   * @param deviceId style:Path optional:false
   * @param callback asynchronous callback
   */
  @GET("/api/com.magnet.server/devices/{deviceId}")
  MagnetCall<Device> getDevice(
     @Path("deviceId") String deviceId,
     retrofit.Callback<Device> callback
  );

  /**
   * 
   * DELETE /api/devices/{deviceId}
   * @param deviceId style:Path optional:false
   * @param callback asynchronous callback
   */
  @HTTP(method = "DELETE", path = "/api/com.magnet.server/devices/{deviceId}", hasBody = true)
  MagnetCall<Boolean> unRegisterDevice(
     @Path("deviceId") String deviceId,
     retrofit.Callback<Boolean> callback
  );

}
